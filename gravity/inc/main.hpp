#pragma once

#include <SFML/Graphics.hpp>
#include <iostream>
#include <vector>
#include <cmath>
#include <cstring>
#include <ctime>
#include <cstdlib>
#include "ball.hpp"

const int WINDOW_WIDTH = 800;
const int WINDOW_HEIGHT = 600;
const float PI = 3.1415926535f;

float mySqrt(float x, float y) { // This function is generated by AI for faster computation
    
    float sq = x*x + y*y;
    
    // Handle special cases: zero, negative, or very small values
    if (sq <= 0.0f) return 0.0f;
    
    float xhalf = 0.5f * sq;
    int i;
    std::memcpy(&i, &sq, sizeof(int));
    
    // Magic constant for initial approximation
    i = 0x5F3759DF - (i >> 1);
    
    float y_approx;
    std::memcpy(&y_approx, &i, sizeof(float));
    
    // First Newton-Raphson iteration
    y_approx = y_approx * (1.5f - xhalf * y_approx * y_approx);
    // Second Newton-Raphson iteration for improved accuracy
    y_approx = y_approx * (1.5f - xhalf * y_approx * y_approx);
    
    return sq * y_approx;
}